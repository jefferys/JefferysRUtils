% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fileUtils.R
\name{isDirPath}
\alias{isDirPath}
\title{Test paths to see if they are for a directory}
\usage{
isDirPath(paths, lexical = FALSE)
}
\arguments{
\item{paths}{Vector of paths to check and see if they are directories.}

\item{lexical}{Set TRUE to skip secondary check of the file system for
paths that don't end in "/" but might already exist as directories.}
}
\value{
Returns a logical vector, TRUE for paths to treat as directories,
FALSE otherwise.
}
\description{
If a path ends in "/" or exists and is a directory, it is a directory path. To
do a pure lexical check, which just looks for the ending "/" and ignores the
file system, set \code{lexical= TRUE}. Note that paths ending in "/" are directory
paths even when they don't exist and even if they could not be created due
to illegal characters or the existence of a file with that name (sans the
terminal "/"). e.g. \code{some/path} as a file does not affect \verb{some/path/} being
reported as a directory.
}
\details{
Any leading "~" is expanded a la \code{path.expand()}, but \code{Sys.glob()} is not used,
e.g. "*" is just a regular character.
}
\examples{

# By default, only false if not ending in "/" and not an existing directory
isDirPath( c("./", ".", "noSuchDir/", "noSuchDir", "~", "*" ))
#> [1] TRUE, TRUE, TRUE, FALSE, TRUE, FALSE

# With lexical=TRUE, only cares about ending "/"
isDirPath( c( "./", ".", "noSuchDir/", "noSuchDir", "~", "*" ),
           lexical= TRUE )
#> [1] TRUE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE

}
\seealso{
\code{dir.exists()}: to just check if a directory exists.
\code{dirname()}: to extract the directory part of a file path (ignores end "/").
\code{Sys.glob()}: to expand glob patterns into a vector of paths (including
optionally adding a terminal "/" to directories).
\code{path.expand()}: to expand leading "~" to home directory, where supported.
}
