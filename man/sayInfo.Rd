% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{sayInfo}
\alias{sayDebug}
\alias{sayError}
\alias{sayFatal}
\alias{sayInfo}
\alias{sayTrace}
\alias{sayWarn}
\title{Log to multiple loggers (with different thresholds)}
\usage{
sayTrace(msg, ..., name = paste0(packageName(), c(".file", ".console")),
  capture = FALSE)

sayDebug(msg, ..., name = paste0(packageName(), c(".file", ".console")),
  capture = FALSE)

sayInfo(msg, ..., name = paste0(packageName(), c(".file", ".console")),
  capture = FALSE)

sayWarn(msg, ..., name = paste0(packageName(), c(".file", ".console")),
  capture = FALSE)

sayError(msg, ..., name = paste0(packageName(), c(".file", ".console")),
  capture = FALSE)

sayFatal(msg, ..., name = paste0(packageName(), c(".file", ".console")),
  capture = FALSE)
}
\arguments{
\item{msg}{The message to print, possibly a string with \code{\link{sprintf}}
symbols (like \code{\%s}), unless \code{capture= TRUE}}

\item{...}{Extra arguments for use by \code{msg}, if it is a sprintf message
(\code{capture= FALSE}), or objects to have the logger format and print
starting on the line following a non-sprintf message. (\code{capture=
TRUE}.)}

\item{name}{The logger names to use (a vector of strings). By default will
use \code{c( \var{package}.file, \var{package}.code )}. A message of the
appropriate level with be logged to each.}

\item{capture}{By default (FALSE), extra object arguments are handled as
format variables for the message, which should contain a matching number of
sprintf variable symbols. If TRUE, then extra object arguments are handled
by the appender layout, by default printed on the next line following
\code{msg}.}
}
\value{
Returns the message from the last logger named, may be NULL if that
  logger does not log the message due to threshold issues and
  \code{flog.carp(TRUE)} is not set.
}
\description{
These are essentially the same as the level-specific loggers in
\code{\link{futile.logger}}, except they each can take a vector of logger
names. The \code{\link{futile.logger}} package makes it easy to log, and allows
logging to both a file and the console, but not with different thresholds.
The \code{say\var{Level}} loggers described here support this as the default
case, but also support any combination of one or more loggers, possibly
differing at each point where a message is logged.
}
\details{
Whether or not a message is propagated depends on each logger's level
separately. If only one name is specified, this is essentially identical to a
\code{flog.\var{level}} call. If no names are provided, by default will log
to two loggers: \code{"\var{package}.file"} and
\code{"\var{package}.console"}.

All loggers should be defined before being used in a log message. Since
loggers are a hierarchical namespace based on the "." separator in the names,
\emph{each} undefined logger passed in causes a logging call to search up the
tree of loggers looking for a "fall-back" logger. As a last resort, this will
be logged by the root logger. This prevents messages being lost, but can
result in the same message being logged multiple times.

To prevent a logger from logging anything, set its threshold to \code{OFF}.
\code{OFF} is exported as another constant for use with loggers and is a
higher priority than \code{FATAL} No logging function can generate a message
with priority greater than \code{FATAL} Note, this is not completely
consistent with the use of the other constants, where the string can be used.
\code{"INFO"} and \code{INFO} are treated similarly in most cases, whereas
\code{"OFF"} and \code{OFF} are not. Always use the constant \code{OFF} (i.e.
the value 0) and not the string.

To ensure a logger logs everything, set its logging threshold to \code{"TRACE"}. No
logging function can generate a message with priority lower than \code{TRACE}
}
\section{Functions}{
\itemize{
\item \code{sayTrace}: Print a message to specified loggers with
a threshold of \code{TRACE}.

\item \code{sayDebug}: Print a message to specified loggers with
a threshold of \code{DEBUG} or \code{TRACE}.

\item \code{sayInfo}: Print a message to specified loggers with
a threshold of \code{INFO}, \code{DEBUG} or \code{TRACE}.

\item \code{sayWarn}: Print a message to specified loggers with
a threshold of \code{WARN}, \code{INFO}, \code{DEBUG} or \code{TRACE}.

\item \code{sayError}: Print a message to specified loggers with a threshold of
\code{ERROR}, \code{WARN}, \code{INFO}, \code{DEBUG} or \code{TRACE}.

\item \code{sayFatal}: Print a message to specified loggers with a threshold of
\code{FATAL} \code{ERROR}, \code{WARN}, \code{INFO}, \code{DEBUG} or
\code{TRACE}.
}}

