% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stringUtils.R
\name{toChar}
\alias{toChar}
\title{Convert strings to vectors of chars.}
\usage{
toChar(x, drop = TRUE, use.names = TRUE)
}
\arguments{
\item{x}{A vector of strings to convert}

\item{drop}{Only affects output when \code{x=} is a single element. Set to
FALSE to avoid automatic simplification of the one-element list output to a
vector.}

\item{use.names}{By default the list will use the original strings as names.
This may not be reasonable for large strings; set this false to just use
numeric ordering (the same as the input string order).}
}
\value{
The input strings, split into vectors of single characters. If more
than one string is input, or if \code{drop= FALSE} is set this outputs a list
of vectors. Vectors will be named for the input string, if possible.
}
\description{
For inputs containing only a single string, returns a character vector of
single chars (UTF8s) by default. For inputs containing multiple strings, or if
drop= FALSE is set, returns a list of character vectors (of single chars)
named for the string. Duplicate names are fine.
}
\examples{
toChar( c("ABC", "ABC", "A\u00dfB", 123, "", "x", NA ) )
#=> $ABC
#=> [1] "A" "B" "C"
#=>
#=> $ABC
#=> [1] "A" "B" "C"
#=>
#=> $AÃŸB
#=> [1] "A" "ÃŸ" "B"
#=>
#=> $`123`
#=> [1] "1" "2" "3"
#=>
#=> [[5]]
#=> [1] ""
#=>
#=> $x
#=> [1] "x"
#=>
#=> $<NA>
#=> [1] NA

toChar( "ABC" )
#=> [1] "A" "B" "C"

toChar( c("ABC", "ABC", use.names= FALSE) )
#=> [[1]]
#=> [1] "A" "B" "C"
#=>
#=> [[1]]
#=> [1] "A" "B" "C"

toChar( "ABC", drop= FALSE )
#=> $ABC
#=> [1] "A" "B" "C"

toChar( "ABC", drop= FALSE, use.names= FALSE )
#=> [[1]]
#=> [1] "A" "B" "C"

toChar( 123 )
#=> [1] "1" "2" "3"

toChar( NULL )
#=> character(0)

toChar( character(0) )
#=> character(0)

}
